import 'gardevoir';
import './style.css';

(async () => {
  const sleep = async ms => new Promise(resolve => setTimeout(resolve, ms));
  let deadMethod = Math.floor(Math.random() * 5 + 1);
  while (deadMethod !== 1) {
    deadMethod = Math.floor(Math.random() * 5 + 1);
    console.log(deadMethod);
    await sleep(30);
  }
  console.log('----- FOUND 1 -----');
  while (deadMethod !== 2) {
    deadMethod = Math.floor(Math.random() * 5 + 1);
    console.log(deadMethod);
    await sleep(30);
  }
  console.log('----- FOUND 2 -----');
  while (deadMethod !== 3) {
    deadMethod = Math.floor(Math.random() * 5 + 1);
    console.log(deadMethod);
    await sleep(30);
  }
  console.log('----- FOUND 3 -----');
  while (deadMethod !== 4) {
    deadMethod = Math.floor(Math.random() * 5 + 1);
    console.log(deadMethod);
    await sleep(30);
  }
  console.log('----- FOUND 4 -----');
  while (deadMethod !== 5) {
    deadMethod = Math.floor(Math.random() * 5 + 1);
    console.log(deadMethod);
    await sleep(30);
  }
  console.log('----- FOUND 5 -----');
})();

// https://stackoverflow.com/a/9462382
function nFormatter(num, digits = 3) {
  const lookup = [
    // { value: 1, symbol: "" },
    // { value: 1e3, symbol: "k" },
    // { value: 1e6, symbol: "M" },
    // { value: 1e9, symbol: "G" },
    // { value: 1e12, symbol: "T" },
    // { value: 1e15, symbol: "P" },
    // { value: 1e18, symbol: "E" }
    { value: 1, symbol: '' },
    { value: 1e3, symbol: '—Ç—ã—â' },
    { value: 1e6, symbol: '–º–µ–≥–∞—Ç—ã—â' },
    { value: 1e9, symbol: '–º–∏–ª—å–∞—Ä–¥' },
    { value: 1e12, symbol: '—Ç—Ä–∏–ª—ë–Ω' },
    { value: 1e15, symbol: '–∫–≤–∞–¥—Ä–∞–ª–∏–æ–Ω' },
    { value: 1e18, symbol: '–¥–æ—Ö—É–ª–∏–æ–Ω' },
  ];
  const regexp = /\.0+$|(?<=\.[0-9]*[1-9])0+$/;
  const item = lookup.findLast(item => num >= item.value);
  return item
    ? (num / item.value).toFixed(digits).replace(regexp, '').concat(item.symbol)
    : '0';
}

const messagesTextarea = document.querySelector('textarea#messages');
const buttonsList = document.querySelector('ul#buttons');
const status = document.querySelector('#status');

const WORKER_PRICE = 5;
const WORKER_EARNS = 5;
const MAX_BALANCE = 1_000_000_000_000_000_000;
const BUTTONS_TITLES = {
  EARN: `–ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å 1 üíµ`,
  BUY_WORKER: `–ö—É–ø–∏—Ç—å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ –∑–∞ ${WORKER_PRICE} üíµ`,
  BUY_5_WORKERS: `–ö—É–ø–∏—Ç—å 5 —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –∑–∞ ${WORKER_PRICE * 5} üíµ`,
  BUY_WORKER_MAX: '–ö—É–ø–∏—Ç—å —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –Ω–∞ –≤—Å–µ –¥–µ–Ω—å–≥–∏',
  ORDER_TO_WORK: '–û—Ç–¥–∞—Ç—å –ø—Ä–∏–∫–∞–∑ —Ä–∞–±–æ—Ç–∞—Ç—å',
  HELP: '–°–ø—Ä–∞–≤–∫–∞',
  RESET: '–°–±—Ä–æ—Å –∏–≥—Ä—ã',
};

const START_MESSAGE = `–ü—Ä–∏–≤–µ—Ç!

–≠—Ç–æ –ø—Ä–æ—Å—Ç–∞—è –∏–≥—Ä–∞-–∫–ª–∏–∫–µ—Ä –ø—Ä–æ –∫–∞—Ä—å–µ—Ä—É —É—Å–ø–µ—à–Ω–æ–≥–æ –±–∏–∑–Ω–µ—Å–º–µ–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∏—á–∞.

–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å - –Ω–∞–∂–º–∏ "${BUTTONS_TITLES.HELP}"`;

const HELP_MESSAGE = `–í—ã –ø–µ—Ç—Ä–æ–≤–∏—á.

–¶–µ–ª—å –∏–≥—Ä—ã - –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å ${nFormatter(
  MAX_BALANCE,
)} üíµ. –ù–∞ —ç—Ç–æ–º –≤—Å–µ, —É –∞–≤—Ç–æ—Ä–∞ –Ω–µ —Ö–≤–∞—Ç–∏–ª–æ –º–æ–∑–≥–æ–≤ –ø—Ä–∏–¥—É–º–∞—Ç—å —á—Ç–æ-—Ç–æ –µ—â—ë.

–ö–Ω–æ–ø–∫–∏

"${BUTTONS_TITLES.EARN}" - –ø–æ–ø–æ–ª–Ω—è–µ—Ç –∫–æ—à–µ–ª–µ–∫ –Ω–∞ 1 üíµ.

"${
  BUTTONS_TITLES.BUY_WORKER
}" - –∑–∞ ${WORKER_PRICE} üíµ —É –≤–∞—Å –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Ä–∞–±–æ—Ç–Ω–∏–∫ –ø—Ä–∏–Ω–æ—Å—è—â–∏–π ${WORKER_EARNS} üíµ –∑–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "${
  BUTTONS_TITLES.ORDER_TO_WORK
}".

"${BUTTONS_TITLES.BUY_5_WORKERS}" - –≤—ã –ø–æ–∫—É–ø–∞–µ—Ç–µ 5 —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤.

"${
  BUTTONS_TITLES.BUY_WORKER_MAX
}" - –≤—ã –ø–æ–∫—É–ø–∞–µ—Ç–µ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –Ω–∞ –≤—Å–µ –¥–µ–Ω—å–≥–∏, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å. –ï—Å–ª–∏ —É –≤–∞—Å 50 üíµ, –∫—É–ø—è—Ç—Å—è ${
  50 / WORKER_PRICE
} —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤.

"${
  BUTTONS_TITLES.ORDER_TO_WORK
}" - –≤—ã –¥–∞–µ—Ç–µ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º –∫–æ–º–∞–Ω–¥—É —Ä–∞–±–æ—Ç–∞—Ç—å. –ï—Å–ª–∏ —É –≤–∞—Å 10 —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤, –æ–Ω–∏ –ø—Ä–∏–Ω–µ—Å—É—Ç ${
  WORKER_EARNS * 10
} üíµ.

–ï—Å—Ç—å —à–∞–Ω—Å —á—Ç–æ —É –≤–∞—Å —É–º—Ä—É—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –ø–æ—Å–ª–µ –∏—Ö –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É.`;

function log(message, addDivider = true) {
  messagesTextarea.value += `${message}
${addDivider ? '--------------------' : ''}
`;
  messagesTextarea.scrollTop = messagesTextarea.scrollHeight;
}

let balance = JSON.parse(localStorage.getItem('balance') || '0');
let workers = JSON.parse(localStorage.getItem('workers') || '0');
// let balance = 0
// let workers = 0
let buttonsBlocked = JSON.parse(
  localStorage.getItem('buttonsBlocked') || 'false',
);

function updateStatus() {
  status.innerText = `–ë–∞–ª–∞–Ω—Å - ${nFormatter(
    balance,
  )} üíµ, —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ - ${nFormatter(workers)}`;
}

function updateBalance(newValue) {
  balance = newValue;
  updateStatus();
  localStorage.setItem('balance', JSON.stringify(balance));
}

function updateWorkers(newValue) {
  workers = newValue;
  updateStatus();
  localStorage.setItem('workers', JSON.stringify(workers));
}

function updateBlockButtons(newValue) {
  buttonsBlocked = newValue;
  localStorage.setItem('buttonsBlocked', JSON.stringify(buttonsBlocked));
}

updateStatus();

function buyWorker(amount) {
  if (amount > 0 && balance >= WORKER_PRICE * amount) {
    updateBalance(balance - WORKER_PRICE * amount);
    updateWorkers(workers + amount);
    log(`–í—ã –∫—É–ø–∏–ª–∏ ${nFormatter(amount)} —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤.`);
  } else {
    log(
      `–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥! –ù—É–∂–Ω–æ ${nFormatter(
        WORKER_PRICE * (amount || 1),
      )} üíµ, —É –≤–∞—Å ${nFormatter(balance)} üíµ`,
    );
  }
}

function buyWorkerMax() {
  buyWorker(Math.floor(balance / WORKER_PRICE));
}

const buttonsData = [
  {
    title: BUTTONS_TITLES.EARN,
    action: () => {
      updateBalance(balance + 1);
      log(`–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ 1 üíµ.`);
    },
  },
  {
    title: BUTTONS_TITLES.BUY_WORKER,
    action: () => {
      buyWorker(1);
    },
  },
  {
    title: BUTTONS_TITLES.BUY_5_WORKERS,
    action: () => {
      buyWorker(5);
    },
  },
  {
    title: BUTTONS_TITLES.BUY_WORKER_MAX,
    action: () => {
      buyWorkerMax();
    },
  },
  {
    title: BUTTONS_TITLES.ORDER_TO_WORK,
    action: () => {
      const profit = WORKER_EARNS * workers;
      updateBalance(balance + profit);
      log(`–í–∞—à–∏ —Ä–∞–±–æ—Ç–Ω–∏–∫–∏ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ${nFormatter(profit)} üíµ.`);
    },
  },
  {
    dontBlockAfterWin: true,
    title: BUTTONS_TITLES.HELP,
    action: () => {
      log(HELP_MESSAGE);
    },
  },
  {
    dontBlockAfterWin: true,
    title: BUTTONS_TITLES.RESET,
    action: () => {
      updateBalance(0);
      updateWorkers(0);
      updateBlockButtons(false);
      window.location.reload();
    },
  },
];

buttonsData.forEach(buttonData => {
  const button = document.createElement('button');
  button.innerText = buttonData.title;
  button.addEventListener('click', () => {
    if (!buttonsBlocked || buttonData.dontBlockAfterWin) {
      buttonData.action();

      let deadChance = 0.05;
      if (workers > 10) deadChance = 0.1;

      let deadMax = (workers / 100) * 90;

      if (workers > 0 && Math.random() < deadChance) {
        let forDead = Math.floor(Math.random() * deadMax);
        if (forDead > workers) forDead = workers;
        if (forDead > 0) {
          let deadMethod = Math.floor(Math.random() * 5);
          // let deadMethod = 2;
          if (deadMethod === 0) {
            log(
              `${nFormatter(
                forDead,
              )} –≤–∞—à–∏—Ö —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ —É–º–µ—Ä–ª–∏ –Ω–∞ —Ä–∞–±–æ—Ç–µ –æ—Ç –∏–Ω—Å—É–ª—å—Ç–∞ –≤ –º—É—á–µ–Ω–∏—è—Ö (–∑–∞—á–µ–º?)`,
            );
            updateWorkers(workers - forDead);
          } else if (deadMethod === 1) {
            log(
              `–£ –≤–∞—Å —Å–¥–∞–ª–∞ –ø—Å–∏—Ö–∏–∫–∞ –∏ –≤—ã —Ä–∞—Å—á–ª–µ–Ω–∏–ª–∏ ${nFormatter(
                forDead,
              )} —Å–≤–æ–∏—Ö —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤. –ù—É –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ`,
            );
            updateWorkers(workers - forDead);
          } else if (deadMethod === 2) {
            const balanceStolenPercents = Math.floor(Math.random() * 100);
            const balanceForStole = Math.floor(
              (balance / 100) * balanceStolenPercents,
            );
            log(
              `–ü—Ä–∏—à–ª–∞ —Ç–æ–ª–ø–∞ –º–∏–ª—ã—Ö –∫–æ—Ç–∏–∫–æ–≤. –û–Ω–∏ –∑–∞–≥—Ä—ã–∑–ª–∏ –∏ —Å—ä–µ–ª–∏ ${nFormatter(
                forDead,
              )} –≤–∞—à–∏—Ö —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤.${
                balance > 0 && balanceForStole > 0
                  ? ` –ê –µ—â—ë —Å–ø–∏–∑–¥–∏–ª–∏ —É –≤–∞—Å –∫–≤–∞—Ä—Ç–∏—Ä—É –≥–¥–µ –¥–µ–Ω—å–≥–∏ –ª–µ–∂–∞—Ç (—Ç–∞–º –±—ã–ª–æ ${balanceStolenPercents}% –æ—Ç ${nFormatter(
                      balance,
                    )} –¥–µ–Ω—è–∫ - –∏—Ç–æ–≥–æ ${nFormatter(balanceForStole)} üíµ)`
                  : ''
              }`,
            );
            if (balance > 0) updateBalance(balance - balanceForStole);
            updateWorkers(workers - forDead);
          } else if (deadMethod === 3) {
            log(
              `–û—Ç –≤–Ω–µ–∑–∞–ø–Ω–æ–π —Ö–≤–æ—Ä–∏ —É –≤–∞—Å —É–º–µ—Ä–ª–æ ${nFormatter(
                forDead,
              )} —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤.`,
            );
            updateWorkers(workers - forDead);
          } else if (deadMethod === 4) {
            log(
              `–°–ª—É—á–∏–ª—Å—è –Ω–µ–≤–µ–¥–æ–º—ã–π –ø–∏–∑–¥–æ—Å. –£ –≤–∞—Å —É–º–µ—Ä–ª–æ ${nFormatter(
                forDead,
              )} —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤.`,
            );
            updateWorkers(workers - forDead);
          }
        }
      }

      if (Math.random() < 0.0008) {
        log(
          '–£ –≤–∞—Å –≤–∑–æ—Ä–≤–∞–ª—Å—è –∑–∞–≤–æ–¥ - –≤—Å–µ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è —Å–≥–æ—Ä–µ–ª–∏ –∏ –≤—Å–µ —Ä–∞–±–æ—Ç–Ω–∏–∫–∏ —É–º–µ—Ä–ª–∏ –≤ –º—É—á–µ–Ω–∏—è—Ö. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–°–±—Ä–æ—Å –∏–≥—Ä—ã" —á—Ç–æ–±—ã —Å–±—Ä–æ—Å–∏—Ç—å—Å—è —Å –∫—Ä—ã—à–∏.',
        );
        updateBlockButtons(true);
      }

      if (Math.random() < 0.0008) {
        if (Math.random() < 0.5) {
          log(
            `–í—ã –∑–∞–µ–±–∞–ª–∏—Å—å –∏ —É–º–µ—Ä–ª–∏, –ø–∏–∑–¥–µ—Ü, –≥–æ—Ä–µ —Ç–æ –∫–∞–∫–æ–µ. –í—Å–µ –¥–æ—Å—Ç–∞–ª–æ—Å—å –≤–∞—à–∏–º –µ–±—É—á–∏–º –¥–µ—Ç—è–º –æ—Ç –≤–∞—à–µ–π –µ–±—É—á–µ–π –±–∞–±—É—à–∫–∏ –∫–æ—Ç–æ—Ä—ã—Ö –≤—Å–µ—Ö –∑–æ–≤—É—Ç –ü–µ—Ç—Ä–æ–≤–∏—á–∞–º–∏. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–°–±—Ä–æ—Å –∏–≥—Ä—ã" —á—Ç–æ–±—ã —É–ø—Ä–∞–≤–ª—è—Ç—å –∏—Ö —Å–æ–∑–Ω–∞–Ω–∏–µ–º.`,
          );
        } else {
          log(
            `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!    –î–û–ù    –ü–µ—Ç—Ä    –î–û–ù    –ü–µ—Ç—Ä–æ–≤–∏—á    –î–û–ù    –ü–µ—Ç—Ä–æ–≤–µ–Ω–∫–æ,    –î–û–ù    –ü–æ—á—Ç–∞    –î–û–ù    –≥–¥–µ-—Ç–æ-—Ç–∞–º–æ–≤—Å–∫–∞    –î–û–ù    —Å–æ–æ–±—â–∞–µ—Ç    –î–û–ù    –≤–∞–º    –î–û–ù    —á—Ç–æ    –î–û–ù    –í—ã    –î–û–ù    —É—Å—Ç–∞–ª–∏,    –î–û–ù    –∑–∞–µ–±–∞–ª–∏—Å—å    –î–û–ù    –∏    –î–û–ù    —É–º–µ—Ä–ª–∏,    –î–û–ù    –ù–ê–ú    –î–û–ù    –û–ß–ï–ù–¨    –î–û–ù    –ñ–ê–õ–¨.    –î–û–ù    –ê    –î–û–ù    —Ç–∞–∫    –î–û–ù    –∂–µ    –î–û–ù    –∞–±—Å–æ–ª—é—Ç–Ω–æ    –î–û–ù    –ø–æ—Ö—É–π.    –î–û–ù    –í—Å–µ    –î–û–ù    –¥–æ—Å—Ç–∞–ª–æ—Å—å    –î–û–ù    –≤–∞—à–∏–º    –î–û–ù    –¥–æ—Ä–æ–≥–∏–º    –î–û–ù    –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞–º    –î–û–ù    -    –î–û–ù    –≤–∞—à–µ–π    –î–û–ù    –µ–±—É—á–µ–π    –î–û–ù    –¥–µ—à–µ–≤–æ–π    –î–û–ù    –±–∞–±—É—à–∫–∏    –î–û–ù    –∫–æ—Ç–æ—Ä—É—é    –î–û–ù    –∑–æ–≤—É—Ç    –î–û–ù    –ü–µ—Ç—Ä–æ–≤–∏—á–µ–º.    –î–û–ù    –ù–∞–∂–º–∏—Ç–µ    –î–û–ù    –∫–Ω–æ–ø–∫—É    –î–û–ù    "–°–±—Ä–æ—Å    –î–û–ù    –∏–≥—Ä—ã"    –î–û–ù    —á—Ç–æ–±—ã    –î–û–ù    —É–ø—Ä–∞–≤–ª—è—Ç—å    –î–û–ù    –µ—ë/–∏—Ö/–∞–∫—ã–Ω    –î–û–ù    –±–∞–ª—è    –î–û–ù    —Å–æ–∑–Ω–∞–Ω–∏–µ–º.`,
          );
        }

        updateBlockButtons(true);
      }

      if (Math.random() < 0.0008) {
        log(
          `–ü–†–û–ò–ó–û–®–ï–õ –ê–ö–´–ù –ë–ê–õ–Ø –µ–±—É—á–∏–π. –≤–∞—à—É –ø–ª–∞–Ω–µ—Ç–∞ —Ä–∞–∑—ä–µ–±–∞–ª–∏ –∏–Ω–æ–ø—Ä–∏—á–ª–µ–Ω—Ü—ã. —à–ª—ë–ø–Ω–∏—Ç–µ –ø–∞ –∫–Ω–æ–ø–µ "–°–±—Ä–æ—Å –∏–≥—Ä—ã" —á—Ç–æ–±—ã –æ—Ç–∫–∞—Ç–∏—Ç—å—Å—è –¥–æ world_backup_${new Date(
            new Date().getTime() + 5000,
          )}`,
        );

        updateBlockButtons(true);
      }

      if (workers > 0 && Math.random() < 0.0008) {
        log(
          `${nFormatter(
            workers,
          )} —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –∑–∞–µ–±–∞–ª–∏—Å—å –∏ –µ–±–Ω—É–ª–∏ –≤–∞—Å –Ω–∞—Ö—É–π. –ó–∞–Ω–æ–≤–æ –¥–∞–≤–∞–π.`,
        );

        updateBlockButtons(true);
      }
    }
    if (balance >= MAX_BALANCE) {
      log('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –ø—Ä–æ—à–ª–∏ –∏–≥—Ä—É.');
      updateBlockButtons(true);
    }
  });

  const listItem = document.createElement('li');
  listItem.appendChild(button);

  buttonsList.appendChild(listItem);
});

log(START_MESSAGE);
if (buttonsBlocked)
  log('–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞. –ù–∞–∂–º–∏—Ç–µ "–°–±—Ä–æ—Å –∏–≥—Ä—ã" —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ');
